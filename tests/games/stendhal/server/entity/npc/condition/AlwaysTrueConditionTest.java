/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on 11.11.2007 05:53:06
 * Time to generate: 00:24.052 seconds
 *
 */

package games.stendhal.server.entity.npc.condition;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.BeforeClass;
import org.junit.Test;

import games.stendhal.common.parser.ConversationParser;
import games.stendhal.server.maps.MockStendlRPWorld;
import marauroa.common.Log4J;
import utilities.PlayerTestHelper;
import utilities.SpeakerNPCTestHelper;

public class AlwaysTrueConditionTest {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		Log4J.init();

		MockStendlRPWorld.get();

	}

	/**
	 * Tests for constructor.
	 */
	@Test
	public void testConstructor() {
		new AlwaysTrueCondition();
	}

	/**
	 * Tests for equals.
	 */
	@Test
	public void testEquals() {
		assertFalse(new AlwaysTrueCondition().equals(null));

		final AlwaysTrueCondition obj = new AlwaysTrueCondition();
		assertTrue(obj.equals(obj));

		assertFalse(new AlwaysTrueCondition().equals(Integer.valueOf(100)));

		assertTrue(new AlwaysTrueCondition().equals(new AlwaysTrueCondition()));
		assertTrue(new AlwaysTrueCondition().equals(new AlwaysTrueCondition() {
			// this is an anonymous sub class
		}));
	}

	/**
	 * Tests for fire.
	 */
	@Test
	public void testFire() {
		assertTrue(new AlwaysTrueCondition().fire(
				PlayerTestHelper.createPlayer("player"),
				ConversationParser.parse("testAllwaysTrueConditionText"),
				SpeakerNPCTestHelper.createSpeakerNPC()));
	}

	/**
	 * Tests for hashCode.
	 */
	@Test
	public void testHashCode() {
		assertEquals(new AlwaysTrueCondition().hashCode(), new AlwaysTrueCondition().hashCode());
	}

	/**
	 * Tests for toString.
	 */
	@Test
	public void testToString() {
		assertEquals("true", new AlwaysTrueCondition().toString());
	}
}
