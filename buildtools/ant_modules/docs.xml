<?xml version='1.0'?>

<project xmlns:if="ant:if" xmlns:unless="ant:unless">

	<property name="build_docs" value="${buildroot}/build_docs"/>
	<property name="tsdocs" value="${build_docs}/typescript"/>


	<target name="clean_javadocs" description="Delete javadoc generated HTML documentation.">
		<delete dir="${docs}"/>
	</target>

	<target name="clean_mkdocs" description="Delete MkDocs generated HTML documentation.">
		<delete dir="${buildroot}/mkdocs/"/>
	</target>

	<target name="javadocs" description="Generate HTML documentation for Java API with javadoc." depends="clean_javadocs">
		<condition property="include.marauroa" value="true">
			<available file="${marauroa_src}" type="dir"/>
		</condition>

		<javadoc
				defaultexcludes="yes"
				destdir="${docs}"
				author="true"
				encoding="UTF-8"
				version="true"
				use="true"
				windowtitle="Stendhal API Documentation Version: ${version}"
				failonerror="yes"
				additionalparam="-Xdoclint:-html">
			<!-- include marauroa source if available -->
			<sourcepath path="${marauroa_src}" if:true="${include.marauroa}"/>
			<sourcepath path="${src}"/>
			<sourcefiles>
				<fileset dir="${testsrc}">
					<include name="utilities/**/*.java"/>
					<!-- some of the utilities depend on the following -->
					<include name="games/stendhal/server/entity/mapstuff/block/BlockTest.java"/>
					<include name="games/stendhal/server/maps/MockStendhalRPRuleProcessor.java"/>
					<include name="games/stendhal/server/maps/MockStendlRPWorld.java"/>
				</fileset>
			</sourcefiles>
			<classpath>
				<pathelement path="${marauroa_src}"
						if:true="${include.marauroa}"/>
				<pathelement path="${src}"/>
				<pathelement path="${testsrc}"/>
				<pathelement path="${guava_jar}"/>
				<pathelement path="${groovy_jar}"/>
				<pathelement path="${marauroa_jar}"/>
				<pathelement path="${jorbis_jar}"/>
				<pathelement path="${junit_jar}"/>
				<pathelement path="${log4j_jar}"/>
				<pathelement path="${simple_jar}"/>
				<pathelement path="${swinglayout_jar}"/>
				<pathelement path="${tiled_jar}"/>
				<pathelement path="${libdir}/ant.jar"/>
				<pathelement path="${libdir}/jcurses.jar"/>
				<pathelement path="${libdir}/pircbot.jar"/>
				<pathelement path="${luaj_jar}"/>
				<pathelement path="${jsonsimple_jar}"/>
				<pathelement path="${hamcrest_jar}"/>
				<pathelement path="${easymock_jar}"/>
				<pathelement path="${easymockclassextension_jar}"/>
				<!-- put marauroa/libs last because it may contain duplicate
						 libraries of a different version -->
				<pathelement path="${marauroa_libs}/*"
						if:true="${include.marauroa}"/>
			</classpath>
		</javadoc>
	</target> <!-- javadocs -->


	<target name="mkdocs" description="Generate HTML documentation for Lua API with MkDocs." depends="clean_mkdocs">
		<echo unless:true="${python.present}"
			message="Python unavailable, cannot run mkdocs"/>

		<!-- Note: script will include Java documentation if "javadocs" build directory is found -->
		<exec if:true="${python.present}" executable="python" failonerror="true"
				dir="./buildtools/mkdocs/">
			<arg value="-u"/>
			<arg value="build.py"/>
		</exec>
	</target> <!-- mkdocs -->


	<target name="clean_tsdocs">
		<delete dir="${tsdocs}"/>
	</target>


	<target name="tsdocs" depends="clean_tsdocs">
		<exec executable="npm${executable.suffix}" failonerror="true">
			<arg value="install"/>
			<arg value="typedoc"/>
			<arg value="--no-save"/>
		</exec>
		<exec executable="npx${executable.suffix}" dir="srcjs/stendhal" failonerror="true">
			<arg value="typedoc"/>
			<arg value="--entryPointStrategy"/>
			<arg value="expand"/>
		</exec>
	</target>


	<target name="docs" description="Generate HTML documentation for Java and Lua APIs." depends="javadocs,mkdocs"/>

</project>
